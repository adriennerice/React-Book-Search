{"version":3,"sources":["components/Nav/index.js","components/Header/index.js","components/Book/index.js","components/Results/index.js","utils/APIGoogle.js","utils/API.js","pages/SearchPage.js","pages/SavedPage.js","pages/NoMatch.js","App.js","serviceWorker.js","index.js"],"names":["Nav","react_default","a","createElement","className","href","id","Header","_ref","children","Book","props","class","src","image","alt","title","subtitle","authors","map","author","key","description","link","onClick","handleClick","clickType","Results","APIGoogle","getBooks","query","axios","get","params","q","API","getBook","deleteBook","delete","saveBook","bookData","post","SearchPage","state","books","searchBar","loadBooks","Google","then","res","console","log","_this","setState","data","catch","err","handleInputChange","event","_event$target","target","name","value","Object","defineProperty","concat","handleFormSubmit","preventDefault","trim","googleId","_this2","this","components_Header","type","onChange","placeholder","length","components_Results","book","components_Book","volumeInfo","imageLinks","thumbnail","canonicalVolumeLink","Component","SavedPage","_id","NoMatch","role","aria-label","App","BrowserRouter","components_Nav","Switch","Route","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.8e6d4eba.chunk.js","sourcesContent":["import React from \"react\";\nimport './style.css';\n\nfunction Nav() {\n  return (\n    <nav className=\"navbar navbar-expand-lg navbar-dark sticky\">\n      <a className=\"navbar-brand\" href=\"/\">\n        Google Books\n      </a>\n      <div className=\"collapse navbar-collapse\" id=\"navbarNavAltMarkup\">\n      <div className=\"navbar-nav\">\n        <a className=\"nav-item nav-link\" href=\"/search\">Search</a>\n        <a className=\"nav-item nav-link\" href=\"/saved\">Saved</a>\n      </div>\n      </div>\n    </nav>\n  );\n}\n\nexport default Nav;\n\n","import React from \"react\";\nimport './style.css';\n\nfunction Header({children}) {\n  return (\n    <div className=\"jumbotron\">\n      {children}\n    </div>\n  );\n}\n\nexport default Header;","import React from \"react\";\nimport './style.css';\n\nfunction Book(props) {\n  return (\n    <div class=\"container\">\n      <div className=\"card mb-3\">\n        <div className=\"row no-gutters\">\n          <div className=\"col-md-4 imageHolder\">\n            <img src={props.image} alt={props.title}></img>\n          </div>\n          <div className=\"col-md-8\">\n            <div className=\"card-header\">{props.title}</div>\n            <div className=\"card-body\">\n              <h6 className=\"card-title\">{ props.subtitle }</h6>\n              <h6 className=\"card-text\">Authors: \n                {props.authors.map(author => {\n                  return (\n                    <span key={author}> {author}</span>\n                  );\n                })}\n              </h6>\n              <h6 className=\"card-text\">{props.description}</h6>\n              <a href={props.link}>\n                <button class=\"btn btn-primary btn-lg active\" >View</button>\n              </a>\n              <button class=\"btn btn-primary btn-lg active deleteBtn\"  onClick={() => props.handleClick(props)}>{ props.clickType } </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Book;\n\n\n","import React from 'react';\nimport './style.css';\n\nfunction Results({ children }) {\n  return (\n    <div>\n      {children}\n    </div>\n  );\n}\n\n\nexport default Results;","import axios from \"axios\";\n// add subject to query string to search all categories\nexport default {\n  // Gets all books\n  getBooks: function(query) {\n    return axios.get(\"/api/google\", { params: { q: query }});\n  }\n};\n","import axios from \"axios\";\n\nexport default {\n  // Gets all books\n  getBooks: function() {\n    return axios.get(\"/api/books\");\n  },\n  // Gets the book with the given id\n  getBook: function(id) {\n    return axios.get(\"/api/books/\" + id);\n  },\n  // Deletes the book with the given id\n  deleteBook: function(id) {\n    return axios.delete(\"/api/books/\" + id);\n  },\n  // Saves a book to the database\n  saveBook: function(bookData) {\n    return axios.post(\"/api/books\", bookData);\n  }\n};\n\n","import React, { Component } from 'react';\n\nimport Header from \"../components/Header\";\nimport Book from \"../components/Book\";\nimport Results from \"../components/Results\";\nimport Google from \"../utils/APIGoogle\";\nimport API from '../utils/API';\n\n\nclass SearchPage extends Component {\n  state = {\n    books: [],\n    searchBar: \"\",\n  };\n\n  loadBooks = () => {\n    Google.getBooks()\n      .then(res =>\n        {\n          console.log(res)\n          this.setState({ books: res.data })\n          console.log(this.state.books)\n        }\n      )\n      .catch(err => console.log(err));\n  };\n\n  handleInputChange = event => {\n    const { name, value } = event.target;\n\n    this.setState({\n      [name]: value\n    });\n    console.log(`Search Bar State: ${ this.state.searchBar }`)\n  };\n\n  handleFormSubmit = event => {\n    event.preventDefault();\n\n    console.log(\"Handle form submit\");\n\n    if (this.state.searchBar) {\n      console.log(this.state.searchBar.trim())\n      Google.getBooks({\n        query: this.state.searchBar,\n      })\n        .then(res => \n          {\n            console.log(res)\n            this.setState({ books: res.data })\n          })\n        .catch(err => console.log(err));\n    }\n  };\n\n  handleClick = (props) => {\n    console.log(\"Saved\")\n    API.saveBook({\n      title: props.title,\n      subtitle: props.subtitle,\n      authors: props.authors,\n      link: props.link,\n      description: props.description,\n      image: props.image,\n      googleId: props.id\n    })\n    .then(res => {\n      console.log(res)\n      this.loadBooks()\n    })\n    .catch(err => console.log(err));\n  }\n  \n  render() {\n    return (\n      <div className=\"App container\">\n        <Header>\n          <h1>(React) Google Books Search</h1>\n\n          <h3>Search for and Save Books of Interest</h3>\n        </Header>\n\n        <h3>Book Search</h3><br></br>\n        <form>\n          <h5>Book</h5>\n          <input \n            type=\"text\" \n            onChange={this.handleInputChange}\n            name=\"searchBar\"\n            placeholder=\"Book Title\" />\n          <button\n            onClick={this.handleFormSubmit}>\n            Search\n          </button>\n        </form>\n        <hr />\n        {!this.state.books.length ? (\n          <h1 className=\"text-center\">No Books to Display</h1>\n        ) : (\n        <Results>\n          {this.state.books.map(book => {\n            return (\n              <Book\n                key={book.id}\n                title={book.volumeInfo.title}\n                subtitle={book.volumeInfo.subtitle}\n                authors={book.volumeInfo.authors}\n                description={book.volumeInfo.description}\n                image={book.volumeInfo.imageLinks.thumbnail}\n                link={book.volumeInfo.canonicalVolumeLink}\n                id={book.id}\n                handleClick={this.handleClick}\n                clickType=\"Save\"\n              />\n            );\n        })}\n        </Results>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default SearchPage;","import React, { Component } from 'react';\nimport Header from \"../components/Header\";\nimport Book from \"../components/Book\";\nimport Results from \"../components/Results\";\nimport API from '../utils/API';\n\n\nclass SavedPage extends Component {\n  state = {\n    books: {}\n  };\n  \n  componentDidMount() {\n    this.loadBooks();\n  }\n\n  loadBooks = () => {\n    API.getBooks()\n      .then(res => {\n        console.log(res)\n        this.setState({ books: res.data })})\n      .catch(err => console.log(err));\n  }\n  \n  handleClick = (props) => {\n    console.log(\"Deleted\")\n    console.log(props.id)\n\n    API.deleteBook(\n      props.id\n    )\n    .then(res => {\n      console.log(res)\n      this.loadBooks()\n    })\n    .catch(err => console.log(err));\n  }\n\n  render() {\n    return (\n      <div className=\"App container\">\n        <Header>\n          <h1>(React) Google Books Search</h1>\n\n          <h3>Save Books of Interest</h3>\n        </Header>\n        {!this.state.books.length ? (\n          <h1 className=\"text-center\">No Books to Display</h1>\n        ) : (\n        <Results>\n          {this.state.books.map(book => {\n            return (\n              <Book\n                key={book.googleId}\n                title={book.title}\n                subtitle={book.subtitle}\n                authors={book.authors}\n                description={book.description}\n                image={book.image}\n                link={book.link}\n                id={book._id}\n                handleClick={this.handleClick}\n                clickType=\"Delete\"\n              />\n            );\n        })}\n        </Results>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default SavedPage;","import React from \"react\";\n// import { Col, Row, Container } from \"../components/Grid\";\n// import Jumbotron from \"../components/Jumbotron\";\n\nfunction NoMatch() {\n  return (\n      <div>      \n        <h1>404 Page Not Found</h1>\n        <h1>\n           <span role=\"img\" aria-label=\"Face With Rolling Eyes Emoji\">\n                🙄\n           </span>\n        </h1>\n      </div>\n  );\n}\n\nexport default NoMatch;\n","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Nav from \"./components/Nav\";\nimport SearchPage from \"./pages/SearchPage\";\nimport SavedPage from \"./pages/SavedPage\";\nimport NoMatch from \"./pages/NoMatch\"; \n\n\nimport './App.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <Router>\n        <div>\n          <Nav />\n          <Switch>\n            <Route exact path=\"/\" component={SearchPage} />\n            <Route exact path=\"/search\" component={SearchPage} />\n            <Route exact path=\"/saved\" component={SavedPage} />\n            <Route component={NoMatch} />\n          </Switch>\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}